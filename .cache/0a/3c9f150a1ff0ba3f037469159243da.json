{"id":"utils/debug.ts","dependencies":[{"name":"C:\\Users\\Oscar D\\Desktop\\typescriptDungeon\\pruebaMapanuevo\\tsconfig.json","includedInParent":true,"mtime":1674368568110},{"name":"C:\\Users\\Oscar D\\Desktop\\typescriptDungeon\\pruebaMapanuevo\\package.json","includedInParent":true,"mtime":1674368568142},{"name":"phaser","loc":{"line":1,"column":19,"index":19},"parent":"C:\\Users\\Oscar D\\Desktop\\typescriptDungeon\\pruebaMapanuevo\\src\\utils\\debug.ts","resolved":"C:\\Users\\Oscar D\\Desktop\\typescriptDungeon\\pruebaMapanuevo\\node_modules\\phaser\\dist\\phaser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debugDraw = void 0;\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar debugDraw = function debugDraw(layer, scene) {\n  var debugGraphics = scene.add.graphics().setAlpha(0.7);\n  layer.renderDebug(debugGraphics, {\n    tileColor: null,\n    collidingTileColor: new _phaser.default.Display.Color(243, 234, 48, 255),\n    faceColor: new _phaser.default.Display.Color(40, 39, 37, 255)\n  });\n};\nexports.debugDraw = debugDraw;"},"sourceMaps":{"js":{"mappings":[{"source":"utils/debug.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"utils/debug.ts","name":null,"original":{"line":1,"column":27},"generated":{"line":8,"column":0}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":9,"column":4}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":13}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":18},"generated":{"line":9,"column":16}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":6},"generated":{"line":9,"column":25}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":34}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":9,"column":35}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":60},"generated":{"line":9,"column":40}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":62},"generated":{"line":9,"column":42}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":81},"generated":{"line":9,"column":47}},{"source":"utils/debug.ts","name":null,"original":{"line":3,"column":85},"generated":{"line":9,"column":49}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":1},"generated":{"line":10,"column":2}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":7},"generated":{"line":10,"column":6}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":20},"generated":{"line":10,"column":19}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":23},"generated":{"line":10,"column":22}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":28},"generated":{"line":10,"column":27}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":29},"generated":{"line":10,"column":28}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":32},"generated":{"line":10,"column":31}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":33},"generated":{"line":10,"column":32}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":41},"generated":{"line":10,"column":40}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":43},"generated":{"line":10,"column":42}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":44},"generated":{"line":10,"column":43}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":52},"generated":{"line":10,"column":51}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":53},"generated":{"line":10,"column":52}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":56},"generated":{"line":10,"column":55}},{"source":"utils/debug.ts","name":null,"original":{"line":4,"column":57},"generated":{"line":10,"column":56}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":1},"generated":{"line":11,"column":2}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":6},"generated":{"line":11,"column":7}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":7},"generated":{"line":11,"column":8}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":18},"generated":{"line":11,"column":19}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":19},"generated":{"line":11,"column":20}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":32},"generated":{"line":11,"column":33}},{"source":"utils/debug.ts","name":null,"original":{"line":5,"column":34},"generated":{"line":11,"column":35}},{"source":"utils/debug.ts","name":null,"original":{"line":6,"column":2},"generated":{"line":12,"column":4}},{"source":"utils/debug.ts","name":null,"original":{"line":6,"column":11},"generated":{"line":12,"column":13}},{"source":"utils/debug.ts","name":null,"original":{"line":6,"column":13},"generated":{"line":12,"column":15}},{"source":"utils/debug.ts","name":null,"original":{"line":6,"column":17},"generated":{"line":12,"column":19}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":2},"generated":{"line":13,"column":4}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":20},"generated":{"line":13,"column":22}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":22},"generated":{"line":13,"column":24}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":26},"generated":{"line":13,"column":28}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":13,"column":43}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":33},"generated":{"line":13,"column":44}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":40},"generated":{"line":13,"column":51}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":41},"generated":{"line":13,"column":52}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":46},"generated":{"line":13,"column":57}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":47},"generated":{"line":13,"column":58}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":50},"generated":{"line":13,"column":61}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":52},"generated":{"line":13,"column":63}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":55},"generated":{"line":13,"column":66}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":57},"generated":{"line":13,"column":68}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":59},"generated":{"line":13,"column":70}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":61},"generated":{"line":13,"column":72}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":64},"generated":{"line":13,"column":75}},{"source":"utils/debug.ts","name":null,"original":{"line":7,"column":65},"generated":{"line":13,"column":76}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":2},"generated":{"line":14,"column":4}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":11},"generated":{"line":14,"column":13}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":14,"column":15}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":17},"generated":{"line":14,"column":19}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":23},"generated":{"line":14,"column":34}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":24},"generated":{"line":14,"column":35}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":31},"generated":{"line":14,"column":42}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":32},"generated":{"line":14,"column":43}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":37},"generated":{"line":14,"column":48}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":38},"generated":{"line":14,"column":49}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":40},"generated":{"line":14,"column":51}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":42},"generated":{"line":14,"column":53}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":44},"generated":{"line":14,"column":55}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":46},"generated":{"line":14,"column":57}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":48},"generated":{"line":14,"column":59}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":50},"generated":{"line":14,"column":61}},{"source":"utils/debug.ts","name":null,"original":{"line":8,"column":53},"generated":{"line":14,"column":64}},{"source":"utils/debug.ts","name":null,"original":{"line":9,"column":2},"generated":{"line":15,"column":3}},{"source":"utils/debug.ts","name":null,"original":{"line":9,"column":3},"generated":{"line":15,"column":4}},{"source":"utils/debug.ts","name":null,"original":{"line":10,"column":0},"generated":{"line":16,"column":0}},{"source":"utils/debug.ts","name":null,"original":{"line":10,"column":1},"generated":{"line":16,"column":1}},{"source":"utils/debug.ts","name":null,"original":{"line":10,"column":1},"generated":{"line":17,"column":0}}],"sources":{"utils/debug.ts":"import Phaser from 'phaser'\n\nconst debugDraw = (layer: Phaser.Tilemaps.StaticTilemapLayer, scene: Phaser.Scene) => {\n\tconst debugGraphics = scene.add.graphics().setAlpha(0.7)\n\tlayer.renderDebug(debugGraphics, {\n\t\ttileColor: null,\n\t\tcollidingTileColor: new Phaser.Display.Color(243, 234, 48, 255),\n\t\tfaceColor: new Phaser.Display.Color(40, 39, 37, 255)\n\t})\n}\n\nexport {\n\tdebugDraw\n}\n"},"lineCount":null}},"error":null,"hash":"e38cd4f13a867cca2a6ec1cc99a459b0","cacheData":{"env":{}}}